--

install iis

1) set asp.net in development features in program control panel iis

2) install asp .net using aspnet_regiis -r

------


to work on iis: add IIS_APPPOOL/default to sql server user login and northwind user login

------

 connectionString="Data Source=localhost\SQLEXPRESS;Initial Catalog=Northwind;Integrated Security=True" providerName="System.Data.SqlClient"/>

------

for code to read from table watch video from disk 2 viewstate section.  foreach row foreach columns, get column[0] cast to textbox, read/write.

--------

alays enter code in app_code

----

creating a string array (other than stringarray)

List<string> myStrings = new List<string>();

myStrings.Add("string1");

-----

add connectionstring to web.config

<connectionStrings>
    <add name="NorthwindConnectionString" connectionString ="Data Source=localhost\\SQLEXPRESS; Initial Catalog=Northwind; Integrated Security=true; Min Pool Size=20"/>
  </connectionStrings>
  
-----

for optional fields, you want to pass NULL in sql string, not 'null' so remember that when building sql statements. better to just make blank though avoid nulls.

-------


access web.config strings

using System.Configuration;

configurationmanager.connectionstrings["NorthwindConnection"].ConnectionSTring;

--------

display currency string.format("{0:C2}",num);

-----------

data access layer - class to open db, other classes for operations on particular tables (getavgprice, getusername, etc.).  make static.

----------

not have to use sqlconnection.close()

using (sqlconnnection conn = connectionmanager.getsqlconnection())
{
do sql commands
}

return
-------

if not want to make huge syntax for string.format:

arraylist ar = new ArrayList(numofitems);

ar.add(string1);
ar.add(string2);
sql = string.format("{0},{1}, etc.", ar);

--------


using System.Web.Mail;

send an email

MailMessage objEmail          = new MailMessage();
            objEmail.To       = txtTo.Text;
            objEmail.From     = txtFrom.Text;
            objEmail.Cc       = txtCc.Text;
            objEmail.Subject  = "Test Email";
            objEmail.Body     = txtName.Text + ", " +
                                txtComments.Text;
objEmail.To.Add(new MailAddress("recipient1@foo.bar.com"));

objEmail.To.Add(new MailAddress("recipient2@foo.bar.com"));

objEmail.To.Add(new MailAddress("recipient3@foo.bar.com"));

 

message.CC.Add(new MailAddress("carboncopy@foo.bar.com"));
objEmail.BodyFormat = MailFormat.Html;

            objEmail.Priority = MailPriority.High;
  //SmtpMail.SmtpServer = "localhost";
  try{
    SmtpMail.Send(objEmail);
    Response.Write("Your Email has been sent sucessfully -
                    Thank You");
  }
  catch (Exception exc){
    Response.Write("Send failure: " + exc.ToString());
  }


-------

inherits = namespace.class so "nav.default" is namespace nav {} and class default


----------

validate date : compare validator, datatypecheck, type date

------------

adding property to class/contorl

public string myproperty
{
get { return _myvar; }
set { set _myvar = value; }
}

-----------

logged in : Context.User.Identity.IsAuthenticated

--------

4 css types:

class : .important
id (applies one html element) : #important
tag (refines html element) : body 
compound (based on your selection) : #sidebar h1

---------


Model
    Business logic goes here
View
    Presentation logic goes here
Controller
    Application logic goes here 

In the MVC system, the way the computer processes the data is known as the model. The output of the results is known as the view. The input of data by the user is known as the controller. It’s important to remember that the view and the controller are the sections of the program which control the input and the output. 

The MVC system is often used in web-based software such as that used in dynamic, or interactive, websites. In these situations, the view is the code, such as HTML, which is generated by the software after processing a query. For example, on a search engine, the search query box would be the controller and the results page the view.

-------

total training

disk1
overview
adding controls
web page processing
validating user input
navigating a website

disk2
asp.net apps
data binding
datagrid
deploying asp

disk3
css & themes
master pages
user controls
server controls
extending existing controls
web parts 
configuring web parts

disk4
view state
cookies & session states
ado.net
ado.net further
caching
localization & resources
security
